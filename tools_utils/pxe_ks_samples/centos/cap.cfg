#BEGIN anacondainit.tt
############################# INIT ###################################################
text
install
reboot
lang en_US.UTF-8
keyboard us
logging --host=10.102.0.30 --level=debug
sshpw --username=root --iscrypted $1$EoKzCzm2$T2uSFYZVLpCWxAdbpNdmO/
%include /tmp/network
rootpw  --iscrypted $6$YWuk6umLGRKVemGQ$LHIEGpes3YskWCQwQdYQtf8Kgj8tvGuOAg42KXoDSmyS.Z8mBhe4t88tJDvBUdmv7DQ22/C7JsTpjiB6pKe93.
firewall --disabled
authconfig --enableshadow --passalgo=sha512
selinux --disabled
bootloader --location=mbr --append="quiet"
services --enabled ipmi,lldpad
services --disabled cpuspeed,iscsi,iscsid,kdump
authconfig --enableshadow --passalgo=sha512
%include /tmp/timezoneinfo

url --url=http://10.102.0.30/pxe/centos/6.4
repo --name="CentOS" --baseurl=http://10.102.0.30/pxe/centos/6.4
#END anacondainit.tt

#BEGIN driverdisk


driverdisk --source http://10.102.0.30/pxe/centos/drivers/hpvsa-1.2.8-160.rhel6u4.x86_64.dd

#END driverdisk

#BEGIN iscsisetup.tt

#END iscsisetup.tt

#BEGIN diskconfig.tt
zerombr
clearpart   --all --initlabel
%include /tmp/storage
%include /tmp/diskinfo
#END diskconfig.tt

%packages
@base
@core
bind-utils
ca-certificates
cpupowerutils
dmidecode
dos2unix
expect
grubby
iotop
ipmitool
iptraf
libaio-devel
lldpad
lrzsz
lsof
lsscsi
man
mlocate
nc
ntp
numactl
OpenIPMI
openssh-clients
openssl
pciutils
perf
perl
perl-CPAN
selinux-policy
strace
sysstat
tcpdump
telnet
traceroute
tree
vim
wget
wireshark
yum-utils
xfsprogs

%end
#BEGIN pre.tt
############################# PRE ###################################################

%pre --log=/tmp/anaconda.pre.log --interpreter /bin/bash --erroronfail

set -x
ln -sv /proc/self/fd /dev
sync
exec > >(logger -s -t anaconda.pre > /tmp/anaconda.pre.log 2>&1) 2>&1
chvt 4

###### GET MGMT DEVICE ########
MGMTDEV=$(ifconfig | grep -B1 "inet addr" | while read inet addr junk; do if [[ $addr == Link ]]; then if [[ $inet != lo ]]; then echo "$inet";fi;fi;done)
echo $MGMTDEV

###### ATTEMPT TO CAPTURE SECONDARY INTERFACE, OTHERWISE ETH1 #######
SECDEV=$(for i in {all,default,$(ifconfig | grep encap:Ethernet | awk '{print $1}')}; do if [[ $i != $MGMTDEV ]]; then if [[ $(ethtool -i $i | grep driver | awk '{print $2}') == "sfc" ]]; then echo $i;fi;fi;done)
if [[ $SECDEV == "" ]]; then SECDEV="eth1"; fi
echo $SECDEV

###### GRAB MAIN STORAGE DEVICE #######
STORAGE=$(fdisk -l | grep Disk | grep bytes | while read disk dev size junk; do SZE=$(printf "%.0f" $size); if [[ $SZE -ge 100 && $SZE -lt 200 ]]; then echo "$dev" | cut -d/ -f3 | sed s/://g; fi;done)



echo $STORAGE
PTP=0
SF=0
SFPTP=0
MANF=""

lsmod | awk '{print $1}' | grep '^ptp$' && PTP=1;
lspci | grep Ethernet | grep Solarflare && SF=1;
[[ "$SF" -ne 0 && "$PTP" -ne 0 ]] && SFPTP=1
MANF=`dmidecode --type system | grep Manufacturer | cut -f2 -d: | sed -r 's/^[[:space:]]+//'`
MODEL=`dmidecode --type system | grep Product | cut -f2 -d: | sed -r 's/^[[:space:]]+//'`

#2pc --lock --ip 10.102.0.30
find -name querySN | rm -f
wget http://10.102.0.30/bootstrap/querySN -O /sbin/querySN
chmod +x /sbin/querySN
if [[ $MANF == VM* ]]; then
	curl -s http://10.102.0.30/bootstrap/renameVM -o /sbin/renameVM
	chmod +x /sbin/renameVM
	curl -s http://10.102.0.30/bootstrap/getMAC -o /sbin/getMAC
	chmod +x /sbin/getMAC
fi
if [[ "$MANF" == HP* ]] ; then
	curl -s http://10.102.0.30/bootstrap/setILO -o /sbin/setILO
	chmod +x /sbin/setILO
fi
HWADDR=`cat /sys/class/net/$MGMTDEV/address`
CURIP=`hostname -I | awk '{print $1}'`
SITEID=10.102
ETH0IP=`querySN --action reserveip --ipref $SITEID --mac $HWADDR --manf "$MANF" --role cap`
ERROR="$?"
if [ "$ERROR" -ne 0 ]; then
	echo "querySN exited with code $ERROR"
	exit 1;
fi
HOSTNAME=`querySN --action gethostname --ipref $ETH0IP`
ERROR="$?"
if [ "$ERROR" -ne 0 ]; then
	echo "querySN exited with code $ERROR"
	exit 1;
fi
TIMEZONE=`querySN --action gettimezone --ipref $SITEID`
ERROR="$?"
if [ "$ERROR" -ne 0 ]; then
	echo "querySN exited with code $ERROR"
	exit 1;
fi
if [ $HOSTNAME ] && [[ $MANF == VM* ]]; then
	VMRENAME=`renameVM --username 'intad\pivcapiuser' --password 'password' --server 172.17.250.175 --mac $HWADDR --newname "$HOSTNAME"`
	ERROR="$?"
	if [ "$ERROR" -ne 0 ]; then
		echo "renameVM exited with code $ERROR"
		exit 1;
	fi
fi
export HOSTNAME
hostname $HOSTNAME
#2pc --unlock --ip 10.102.0.30
cat > /tmp/env <<EOF
HWADDR="$HWADDR"
CURIP="$CURIP"
SITEID="$SITEID"
ETH0IP="$ETH0IP"
HOSTNAME="$HOSTNAME"
TIMEZONE="$TIMEZONE"
PTP="$PTP"
SF="$SF"
SFPTP="$SFPTP"
MANF="$MANF"
MODEL="$MODEL"
MGMTDEV="$MGMTDEV"
SECDEV="$SECDEV"
STORAGEDEV="$STORAGE"
EOF

cat > /tmp/storage <<EOF               
ignoredisk --only-use=/dev/$STORAGE
part        /boot --fstype=ext4 --size=512 --ondisk=$STORAGE
part        pv.253003 --grow --size 1 --ondisk=$STORAGE

EOF

echo "network --hostname $HOSTNAME --onboot yes --bootproto dhcp --noipv6 --device $MGMTDEV" > /tmp/network
cat > /tmp/diskinfo <<EOF
volgroup vg_$HOSTNAME --pesize=4096 pv.253003
logvol / --fstype=ext4 --name=lv_root --vgname=vg_$HOSTNAME --size=1 --grow
logvol swap --name=lv_swap --vgname=vg_$HOSTNAME --size=4096
#logvol /home --fstype=ext4 --name=lv_home --vgname=vg_$HOSTNAME --size=10240 --grow --maxsize=51200
#logvol /var --fstype=ext4 --name=lv_var --vgname=vg_$HOSTNAME --size=5120 --grow --maxsize=10240
#logvol /var/log --fstype=ext4 --name=lv_var_log --vgname=vg_$HOSTNAME --size=5120
EOF

echo "timezone --utc $TIMEZONE" > /tmp/timezoneinfo

echo iscsiname iqn.1994-05.com.domain:$HOSTNAME > /tmp/iscsiinfo
echo 'iscsi --ipaddr=10.102.16.11 --port=3260' >> /tmp/iscsiinfo
echo 'iscsi --ipaddr=10.102.16.12 --port=3260' >> /tmp/iscsiinfo
echo 'iscsi --ipaddr=10.102.16.13 --port=3260' >> /tmp/iscsiinfo
echo 'iscsi --ipaddr=10.102.16.14 --port=3260' >> /tmp/iscsiinfo

chvt 1

%end

#END pre.tt
#BEGIN postheader.tt
############################# POST ###################################################
%packages
@core
%end

%post --nochroot --log=/tmp/anaconda.post-noch.log --interpreter /bin/bash --erroronfail
set -x
killall rsyslogd
/sbin/rsyslogd -f /etc/rsyslog.conf
ln -sv /proc/self/fd /dev/
sync
exec > >(logger -s -t anaconda.post-noch > /tmp/anaconda.post-noch.log 2>&1) 2>&1
chvt 4

cp -fv /tmp/* /mnt/sysimage/tmp/
cp -fv /sbin/querySN /mnt/sysimage/usr/sbin/
cp -fv /sbin/getMAC /mnt/sysimage/usr/sbin/
#if [[ $MANF == HP* ]] ; then
	cp -fv /sbin/setILO /mnt/sysimage/usr/sbin/
#fi
cp -fv /sbin/2pc /mnt/sysimage/usr/sbin/
rm -fv /dev/fd
cp -fv /tmp/anaconda.*.log /mnt/sysimage/var/log/
%end

%post --log=/var/log/anaconda.post.log --interpreter /bin/bash 
set -x
killall rsyslogd
echo '*.* @@10.102.0.30:514' > /etc/rsyslog.d/pxe.conf
/sbin/service rsyslog restart

yum-config-manager --disable \*
yum-config-manager --enable ttinternal\*
yum-config-manager --disable \*centosplus\*
yum-config-manager --disable \*fasttrack\*

ln -sv /proc/self/fd /dev/
sync
exec > >(logger -s -t anaconda.post 2>&1 | tee -a /var/log/anaconda.post.log > /dev/tty4) 2>&1
chvt 4

MODEL=`dmidecode --type system | grep Product | cut -f2 -d: | sed -r 's/^[[:space:]]+//'`
source /tmp/env
hostname $HOSTNAME
ssh-keygen -f /root/.ssh/id_rsa -N '' -b 4096

### ADD Jenkins User #####
cat >> /root/.ssh/authorized_keys <<EOF
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6TnJoOztpk9gXEBhqOuDijyWi18Aqb9iT7UubsDG5qJ1haeErql2fcV0enSR8SET9NX46ckqeQlI6FJ5hFX39eJ4LMNj0FtThMfIva1n1OjTfoOjLXbG1acamCGE0vKo/OQTcL543tJ8BGW8U8aqz4X7G86qNsgheK7BUApBAbeBprM1Sk35jjtmA7AftUvCgv+AqtLINoG8w+MCCTvnXy/0ulLa880xlvjyVlVKJXJTeg725hGsdhHTWMqZ4PYFm0j08jLlq/KfwZwhfJLQApgTiF1KkoAUpT6+Sevm5BlAQb9oj0jWzeUpcrE5dlhxRcSU7+4krPau/cKuxZQUow== jenkins@CHIBLD11

EOF

### DNS SETUP ###
cat > /etc/resolv.conf <<EOF
domain ar.debesys.net
nameserver 10.102.2.54
nameserver 10.102.2.55
nameserver 10.111.2.70
options single-request-reopen
EOF
sed -i "s/HOSTNAME=.*/HOSTNAME=$HOSTNAME/" /etc/sysconfig/network

cat >> /etc/hosts <<EOF
$ETH0IP $HOSTNAME.ar.debesys.net $HOSTNAME
EOF


	sed -ri 's/(rhgb[ ]*|quiet[ ]*)//g' /boot/grub/grub.conf



#END postheader.tt

#BEGIN packagesinstalls.tt
############################# PACKAGES ###################################################

rm -f /etc/yum.repos.d/*
cat > /etc/yum.repos.d/CentOS-Base.repo <<EOF
[base]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.base
name=base
enabled=1
EOF

cat > /etc/yum.repos.d/CentOS-debesys.repo <<EOF
[debesys]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.debesys
name=debesys
enabled=1
EOF

cat > /etc/yum.repos.d/CentOS-debesys.repo <<EOF
[debesys]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.debesys
name=debesys
enabled=1
EOF

cat > /etc/yum.repos.d/CentOS-epel.repo <<EOF
[epel]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.epel
name=epel
enabled=1 
EOF

cat > /etc/yum.repos.d/CentOS-extras.repo <<EOF
[extras]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.extras
name=extras
enabled=1
EOF

cat > /etc/yum.repos.d/CentOS-fasttrack.repo <<EOF
[fasttrack]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.fasttrack
name=fasttrack
enabled=1
EOF

cat > /etc/yum.repos.d/CentOS-hptools.repo <<EOF
[hptools]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.hptools
name=hptools
enabled=1
EOF

cat > /etc/yum.repos.d/CentOS-updates.repo <<EOF
[updates]
baseurl=http://10.102.0.30/mrepo/6Server-x86_64/RPMS.updates
name=updates
enabled=1
EOF

yum clean all

yum install -y --nogpgcheck ttinternal-release \
numatop \
byobu \
ccze \
htop \
iftop \
inotify-tools \
nethogs \
nload \
python-pip \
tmux \
dkms


wget http://10.102.0.30/bootstrap/network_health.pl -P ~/; mv -f ~/network_health.pl /root/network_health;
chmod +x /root/network_health
if [[ $MANF == VM* ]] ; then
yum install open-vm-tools -y --nogpgcheck
fi

if [[ ${MANF} == "HP" ]] ; then
yum -y --nogpgcheck install hponcfg
yum -y --nogpgcheck install hp-scripting-tools
hprcu -r -l -f http://10.102.0.30/bootstrap/hprcu_settings_`echo $MODEL | sed -r "s/ /_/g"`.xml
yum install -y --nogpgcheck lldpad
modprobe hpilo
fi
if [ "$SF" -ne 0 ]
then
yum -y --nogpgcheck install ttinternal-solarflare
#yum -y --nogpgcheck install http://10.102.0.30/repo/solarflare/el6/201606/x86_64/ttinternal-solarflare-201606-1.el6.noarch.rpm
yum -y --nogpgcheck install openonload
yum -y --nogpgcheck install openonload-kmod-$(uname -r)
yum -y --nogpgcheck install sfutils
yum -y --nogpgcheck install sfptpd
modprobe sfc
modprobe onload
/sbin/dracut --force
#echo Y | sfupdate --write
fi
yum install -y --nogpgcheck ttinternal-dag
yum -y --nogpgcheck install \
dag \
dag-base \
dag-devel \
dag-doc \
dag-firmware \
dag-python \
dag-utils \
linuxptp \
hpacucli \
kernel-devel

dkms autoinstall
ERROR=$?   
if [[ $ERROR -ne 0 ]]; then
	read -p "Error" yn
fi

#END packagesinstalls.tt

#BEGIN sysctl.tt
#for i in {all,default,$(ifconfig | grep encap:Ethernet | awk '{print $1}')}
#do
#    sysctl net.ipv4.conf.$i.rp_filter=0;
#    cat /etc/sysctl.conf | grep "$i.rp_filter=0" 2>&1 > /dev/null;
#    if [ $? -eq 1 ]
#    then
#        echo "net.ipv4.conf.$i.rp_filter=0" >> /etc/sysctl.conf
#    fi
#done

echo "net.ipv4.conf.all.rp_filter=0" >> /etc/sysctl.conf
echo "net.ipv4.conf.default.rp_filter=0" >> /etc/sysctl.conf
#END sysctl.tt

#BEGIN if.tt
ls /etc/sysconfig/network-scripts/ifcfg-* | grep -v ifcfg-lo | xargs rm -fv

#2pc --lock --ip 10.102.0.30
if [ $? == 0 ]
then






grubby --update-kernel=DEFAULT --args="mem=107G"
modprobe bonding
cat > /etc/sysconfig/network-scripts/ifcfg-$MGMTDEV <<EOF
DEVICE="$MGMTDEV"
HWADDR=`cat /sys/class/net/$MGMTDEV/address`
IPV6INIT="no"
MASTER="bond0"
NM_CONTROLLED="no"
ONBOOT="yes"
SLAVE="yes"
BOOTPROTO=none
EOF

cat > /etc/sysconfig/network-scripts/ifcfg-$SECDEV <<EOF
DEVICE="$SECDEV"
HWADDR=`cat /sys/class/net/$SECDEV/address`
IPV6INIT="no"
MASTER="bond0"
NM_CONTROLLED="no"
ONBOOT="yes"
SLAVE="yes"
BOOTPROTO=none
EOF

NETMASKVAL=`querySN --action getmask --hostname $HOSTNAME --vlan VLAN400`

cat > /etc/sysconfig/network-scripts/ifcfg-bond0 <<EOF
DEVICE=bond0
BOOTPROTO="none"
IPADDR=`querySN --action setip --hostname $HOSTNAME --vlan VLAN400`
NETMASK="$NETMASKVAL"
GATEWAY="10.102.0.1"
IPV6INIT="no"
NM_CONTROLLED="no"
ONBOOT="yes"
BONDING_OPTS="mode=active-backup miimon=100"
EOF


###### ISCSI SETUP ####
echo "InitiatorName=iqn.1994-05.com.domain:$HOSTNAME" > /etc/iscsi/initiatorname.iscsi
service iscsi start  && chkconfig iscsi on
iscsiadm -m discovery -t st -p :3260
sleep 5

IRESULTS=`iscsiadm -m discovery -t st -p 10.102.16.11:3260`
while read PORTAL TARGET OTHER
do
iscsiadm -m node -T $TARGET -p $PORTAL -l

done <<< "${IRESULTS}"

iscsiadm -m session -R
sleep 10

/sbin/mpathconf --user_friendly_names y --enable

service multipathd start; chkconfig multipathd on
multipath -v2
COMMAND=$(multipath -ll | grep "active ready")
ICOUNT=$(echo "$COMMAND" | wc -l)
if [ $ICOUNT -ne 4 ]; then
	echo "Failed: Unable to see all iSCSI links"
	exit 1;
fi
mkdir -p /var/captures

PARTEDCMD="parted -s -m --align optimal /dev/mapper/mpathb unit s"
PARTED_PRINT_OUT="$(${PARTEDCMD} print)"
grep -q "unrecognised disk label" <<< "${PARTED_PRINT_OUT}"
if [[ $? -eq 0 ]]; then
	MKLABEL=$(parted -s /dev/mapper/mpathb unit s mklabel gpt)
	MKPART=$(parted -s /dev/mapper/mpathb unit s mkpart primary 0% 100% set 1 lvm on)
	PVCREATE=$(pvcreate /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "PVCreate was not successful."
		exit 1;
	fi
	VBCREATE=$(vgcreate vg_${HOSTNAME}_san /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "VGCreate was not successful."
		exit 1;
	fi
	LVCREATE=$(lvcreate -l 100%FREE -n lv_captures vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "LVCreate was not successful."
		exit 1;
	fi
	MKFS=$(mkfs.xfs /dev/vg_${HOSTNAME}_san/lv_captures)
	if [[ $? -ne 0 ]]; then
		echo "mkfs was not successful."
		exit 1;
	fi

else
	CHVM=$(vgchange -ay vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "VGCHANGE was not successful."
		exit 1;
	fi
fi
MOUNT=$(mount -t xfs /dev/vg_${HOSTNAME}_san/lv_captures /var/captures/)
if [[ $? -ne 0 ]]; then
	echo "Mount was not successful."
	exit 1;
fi
FSTABINS=$(echo -e "/dev/vg_${HOSTNAME}_san/lv_captures\t/var/captures\txfs\tdefaults,_netdev,discard\t1 2" >> /etc/fstab)
if [[ $? -ne 0 ]]; then
	echo "LVCreate was not successful."
	exit 1;
fi


IRESULTS=`iscsiadm -m discovery -t st -p 10.102.16.12:3260`
while read PORTAL TARGET OTHER
do
iscsiadm -m node -T $TARGET -p $PORTAL -l

done <<< "${IRESULTS}"

iscsiadm -m session -R
sleep 10

/sbin/mpathconf --user_friendly_names y --enable

service multipathd start; chkconfig multipathd on
multipath -v2
COMMAND=$(multipath -ll | grep "active ready")
ICOUNT=$(echo "$COMMAND" | wc -l)
if [ $ICOUNT -ne 4 ]; then
	echo "Failed: Unable to see all iSCSI links"
	exit 1;
fi
mkdir -p /var/captures

PARTEDCMD="parted -s -m --align optimal /dev/mapper/mpathb unit s"
PARTED_PRINT_OUT="$(${PARTEDCMD} print)"
grep -q "unrecognised disk label" <<< "${PARTED_PRINT_OUT}"
if [[ $? -eq 0 ]]; then
	MKLABEL=$(parted -s /dev/mapper/mpathb unit s mklabel gpt)
	MKPART=$(parted -s /dev/mapper/mpathb unit s mkpart primary 0% 100% set 1 lvm on)
	PVCREATE=$(pvcreate /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "PVCreate was not successful."
		exit 1;
	fi
	VBCREATE=$(vgcreate vg_${HOSTNAME}_san /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "VGCreate was not successful."
		exit 1;
	fi
	LVCREATE=$(lvcreate -l 100%FREE -n lv_captures vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "LVCreate was not successful."
		exit 1;
	fi
	MKFS=$(mkfs.xfs /dev/vg_${HOSTNAME}_san/lv_captures)
	if [[ $? -ne 0 ]]; then
		echo "mkfs was not successful."
		exit 1;
	fi

else
	CHVM=$(vgchange -ay vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "VGCHANGE was not successful."
		exit 1;
	fi
fi
MOUNT=$(mount -t xfs /dev/vg_${HOSTNAME}_san/lv_captures /var/captures/)
if [[ $? -ne 0 ]]; then
	echo "Mount was not successful."
	exit 1;
fi
FSTABINS=$(echo -e "/dev/vg_${HOSTNAME}_san/lv_captures\t/var/captures\txfs\tdefaults,_netdev,discard\t1 2" >> /etc/fstab)
if [[ $? -ne 0 ]]; then
	echo "LVCreate was not successful."
	exit 1;
fi


IRESULTS=`iscsiadm -m discovery -t st -p 10.102.16.13:3260`
while read PORTAL TARGET OTHER
do
iscsiadm -m node -T $TARGET -p $PORTAL -l

done <<< "${IRESULTS}"

iscsiadm -m session -R
sleep 10

/sbin/mpathconf --user_friendly_names y --enable

service multipathd start; chkconfig multipathd on
multipath -v2
COMMAND=$(multipath -ll | grep "active ready")
ICOUNT=$(echo "$COMMAND" | wc -l)
if [ $ICOUNT -ne 4 ]; then
	echo "Failed: Unable to see all iSCSI links"
	exit 1;
fi
mkdir -p /var/captures

PARTEDCMD="parted -s -m --align optimal /dev/mapper/mpathb unit s"
PARTED_PRINT_OUT="$(${PARTEDCMD} print)"
grep -q "unrecognised disk label" <<< "${PARTED_PRINT_OUT}"
if [[ $? -eq 0 ]]; then
	MKLABEL=$(parted -s /dev/mapper/mpathb unit s mklabel gpt)
	MKPART=$(parted -s /dev/mapper/mpathb unit s mkpart primary 0% 100% set 1 lvm on)
	PVCREATE=$(pvcreate /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "PVCreate was not successful."
		exit 1;
	fi
	VBCREATE=$(vgcreate vg_${HOSTNAME}_san /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "VGCreate was not successful."
		exit 1;
	fi
	LVCREATE=$(lvcreate -l 100%FREE -n lv_captures vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "LVCreate was not successful."
		exit 1;
	fi
	MKFS=$(mkfs.xfs /dev/vg_${HOSTNAME}_san/lv_captures)
	if [[ $? -ne 0 ]]; then
		echo "mkfs was not successful."
		exit 1;
	fi

else
	CHVM=$(vgchange -ay vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "VGCHANGE was not successful."
		exit 1;
	fi
fi
MOUNT=$(mount -t xfs /dev/vg_${HOSTNAME}_san/lv_captures /var/captures/)
if [[ $? -ne 0 ]]; then
	echo "Mount was not successful."
	exit 1;
fi
FSTABINS=$(echo -e "/dev/vg_${HOSTNAME}_san/lv_captures\t/var/captures\txfs\tdefaults,_netdev,discard\t1 2" >> /etc/fstab)
if [[ $? -ne 0 ]]; then
	echo "LVCreate was not successful."
	exit 1;
fi


IRESULTS=`iscsiadm -m discovery -t st -p 10.102.16.14:3260`
while read PORTAL TARGET OTHER
do
iscsiadm -m node -T $TARGET -p $PORTAL -l

done <<< "${IRESULTS}"

iscsiadm -m session -R
sleep 10

/sbin/mpathconf --user_friendly_names y --enable

service multipathd start; chkconfig multipathd on
multipath -v2
COMMAND=$(multipath -ll | grep "active ready")
ICOUNT=$(echo "$COMMAND" | wc -l)
if [ $ICOUNT -ne 4 ]; then
	echo "Failed: Unable to see all iSCSI links"
	exit 1;
fi
mkdir -p /var/captures

PARTEDCMD="parted -s -m --align optimal /dev/mapper/mpathb unit s"
PARTED_PRINT_OUT="$(${PARTEDCMD} print)"
grep -q "unrecognised disk label" <<< "${PARTED_PRINT_OUT}"
if [[ $? -eq 0 ]]; then
	MKLABEL=$(parted -s /dev/mapper/mpathb unit s mklabel gpt)
	MKPART=$(parted -s /dev/mapper/mpathb unit s mkpart primary 0% 100% set 1 lvm on)
	PVCREATE=$(pvcreate /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "PVCreate was not successful."
		exit 1;
	fi
	VBCREATE=$(vgcreate vg_${HOSTNAME}_san /dev/mapper/mpathbp1)
	if [[ $? -ne 0 ]]; then
		echo "VGCreate was not successful."
		exit 1;
	fi
	LVCREATE=$(lvcreate -l 100%FREE -n lv_captures vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "LVCreate was not successful."
		exit 1;
	fi
	MKFS=$(mkfs.xfs /dev/vg_${HOSTNAME}_san/lv_captures)
	if [[ $? -ne 0 ]]; then
		echo "mkfs was not successful."
		exit 1;
	fi

else
	CHVM=$(vgchange -ay vg_${HOSTNAME}_san)
	if [[ $? -ne 0 ]]; then
		echo "VGCHANGE was not successful."
		exit 1;
	fi
fi
MOUNT=$(mount -t xfs /dev/vg_${HOSTNAME}_san/lv_captures /var/captures/)
if [[ $? -ne 0 ]]; then
	echo "Mount was not successful."
	exit 1;
fi
FSTABINS=$(echo -e "/dev/vg_${HOSTNAME}_san/lv_captures\t/var/captures\txfs\tdefaults,_netdev,discard\t1 2" >> /etc/fstab)
if [[ $? -ne 0 ]]; then
	echo "LVCreate was not successful."
	exit 1;
fi






eth0_ip=`querySN --action getip --hostname $HOSTNAME --vlan VLAN400`
ERROR="$?"
if [ "$ERROR" -ne 0 ] || [ -z "$eth0_ip" ]; then
	ERROR="$?"
	echo "querySN exited with code $ERROR"
	exit 1;
fi
eth0_mask=`querySN --action getmask --hostname $HOSTNAME --vlan VLAN400`
ERROR="$?"
if [ "$ERROR" -ne 0 ]; then
	ERROR="$?"
	echo "querySN exited with code $ERROR"
	exit 1;
fi

sed -i "s/eth0:dhcp/${eth0_ip}::10.102.0.1:${eth0_mask}::eth0:none/g" \
       /boot/grub/grub.conf


else            
        exit 1
fi
#2pc --unlock --ip 10.102.0.30 || ( echo "2pc daemon not responding"; exit 1 )

rm -fv /etc/udev/rules.d/*-persistent-net.rules
#END if.tt

#BEGIN timecontrol.tt
service ntpd stop
service ntpdate start


if [[ $PTP != 0 ]]
then
	if [[ $SF != 0 ]]
	then
		mkdir /var/log/sfptpd
	echo "interface $MGMTDEV" > /etc/sfptpd.conf
cat >> /etc/sfptpd.conf <<EOF

clock_control step-at-startup
message-log /var/log/sfptpd/message
persistent-clock-correction on
ptp-delayreq-interval 1
ptp-mode slave
ptp-network-mode hybrid
ptp-rx-latency 0
ptp-ttl 64
ptp-tx-latency 0
ptp_utc_valid_handling ignore
stats-log /var/log/sfptpd/stats
sync-mode ptp
EOF
cat > /etc/logrotate.d/sfptpd <<EOF
/var/log/sfptpd/message
/var/log/sfptpd/stat
{
	daily
	rotate 10
	delaycompress
	compress
	sharedscripts
	#postrotate
	#/bin/killall -HUP sfptpd || true
	endscript
}
EOF
		rm -fv /etc/init.d/sfptpd
cat > /etc/init/sfptpd.conf <<EOF
author "Trading Technologies Inc."
start on startup
stop on shutdown
kill timeout 5
console none
respawn
post-stop exec sleep 1
exec /usr/sbin/sfptpd -f/etc/sfptpd.conf
EOF
		#initctl reload-configuration
		#restart sfptpd
		/sbin/chkconfig ntpd off
	fi
else
	sed -ri s/SYNC_HWCLOCK=no/SYNC_HWCLOCK=yes/g /etc/sysconfig/ntpdate
	/sbin/service ntpd start
	/sbin/chkconfig ntpd on
	ntpdate -b 0.centos.pool.ntp.org 1.centos.pool.ntp.org 2.centos.pool.ntp.org
	hwclock --systohc
fi

hwclock --systohc
#END timecontrol.tt

#BEGIN ldap.tt
#yum -y install sssd
#/sbin/chkconfig sssd on

wget http://10.102.0.30/pub/dirsrv-pubkey.pem
certutil -A -n "dirsrv-CA" -t "TC,TC,TC" -d /etc/openldap/certs -i ./dirsrv-pubkey.pem \
	&& rm -fv ./dirsrv-pubkey.pem

authconfig --updateall \
	       --enablesssd \
	       --enablesssdauth \
	       --enablelocauthorize \
	       --enablepamaccess \
	       --enablemkhomedir


sudo_group_mod=$(echo "Debesys-SuperUsers" | sed 's/ /\\ /g')
cat > /etc/sudoers.d/priv <<EOF
Cmnd_Alias  SHELLS = /bin/sh,/bin/bash
Cmnd_Alias  SU = /bin/su,/usr/bin/sudo
Cmnd_Alias  PASSWD = /usr/bin/passwd

%$sudo_group_mod ALL=(ALL) NOPASSWD:ALL, !SHELLS, !SU, !PASSWD
EOF
chmod 0440 /etc/sudoers.d/priv
chmod o-x /usr/bin/passwd

#create sssd config
cat > /etc/sssd/sssd.conf <<'EOF'
#Begin /etc/sssd/sssd.conf
[domain/default]
ldap_id_use_start_tls = False
cache_credentials = True
ldap_search_base = dc=int,dc=tt,dc=local
id_provider = ldap
auth_provider = ldap
chpass_provider = ldap
ldap_user_ssh_public_key = ntUserParms
ldap_uri = ldaps://10.102.0.28
ldap_tls_cacertdir = /etc/openldap/certs/
ldap_tls_reqcert = never
access_provider = ldap
ldap_access_order = filter
ldap_access_filter = (|(memberOf=cn=debesys*)(memberOf=cn=ttnet*))
enumerate = True

[sssd]
services = nss, pam, ssh
config_file_version = 2
domains = default

[nss]

[pam]

[sudo]

[autofs]

[ssh]

[pac]
#End /etc/sssd/sssd.conf
EOF

cat > /etc/pam_ldap.conf <<'EOF'
#Begin /etc/pam_ldap.conf
base dc=int,dc=tt,dc=local
binddn cn=binduser,ou=ds-service-accounts,dc=int,dc=tt,dc=local
bindpw password
tls_cacertdir /etc/openldap/certs/
uri ldaps://10.102.0.28
pam_password md5
ssl on
tls_reqcert never
#End /etc/pam_ldap.conf
EOF

rm -fv /etc/openldap/ldap.conf
ln -sv /etc/pam_ldap.conf /etc/openldap/ldap.conf 

cat /etc/ssh/sshd_config | grep -e 'AuthorizedKeysCommand[[:space:]]*/usr/bin/sss_ssh_authorizedkeys' | grep -v \# \
    || echo 'AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys' >> /etc/ssh/sshd_config

chmod -v 600 /etc/sssd/sssd.conf
chmod -v 600 /etc/pam_ldap.conf
chmod -v 600 /etc/openldap/ldap.conf

/sbin/service sssd start
/sbin/service sshd restart

chkconfig sssd on
#END ldap.tt

#BEGIN HPspecific.tt
if [[ "$MANF" == HP* ]] ; then
grubby --update-kernel=DEFAULT --args="intel_idle.max_cstate=0 processor.max_cstate=0 nosoftlockup mce=ignore_ce"

/sbin/service lldpad start
for i in $(ifconfig | grep encap:Ethernet | awk '{print $1}')
do
    lldptool -L -i $i adminStatus=rxtx
    lldptool -T -V portDesc -i $i enableTx=yes
    lldptool -T -V sysName -i $i enableTx=yes
done
fi
#END HPspecific.tt

#BEGIN iptables.tt
#Will not work in kickstart, need to write directly to config
rm /etc/sysconfig/iptables-save
if [ 0 -eq 1 ]
then
cat >> /etc/sysconfig/iptables-save <<EOF
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [36:2866]
-A INPUT -i lo -j ACCEPT 
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT 
-A INPUT -p icmp -j ACCEPT 
	#iptables -P INPUT ACCEPT
	#iptables -P FORWARD ACCEPT
	#iptables -P OUTPUT ACCEPT
	#iptables -F
	#iptables -A INPUT -i lo -j ACCEPT
	#iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	#iptables -A INPUT -p icmp -j ACCEPT
EOF
if [ "$PTP" -ne 0 ]
then
cat >> /etc/sysconfig/iptables-save <<EOF
-A INPUT -d 224.0.1.129/32 -j ACCEPT 
-A INPUT -d 224.0.0.107/32 -j ACCEPT 
-A INPUT -p udp -m udp --dport 319 -j ACCEPT 
-A INPUT -p udp -m udp --dport 320 -j ACCEPT 
        #iptables -A INPUT -d 224.0.1.129/32 -j ACCEPT
        #iptables -A INPUT -d 224.0.0.107/32 -j ACCEPT
        #iptables -A INPUT -p udp -m udp --dport 319 -j ACCEPT
        #iptables -A INPUT -p udp -m udp --dport 320 -j ACCEPT

EOF
fi
cat >> /etc/sysconfig/iptables-save <<EOF
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT 
-A INPUT -j REJECT --reject-with icmp-host-prohibited 
-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT 
-A FORWARD -j REJECT --reject-with icmp-host-prohibited 
COMMIT
	#iptables -A INPUT -p tcp --dport 22 -j ACCEPT
	#iptables -A INPUT -j REJECT --reject-with icmp-host-prohibited
	#iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
	#iptables -A FORWARD -j REJECT --reject-with icmp-host-prohibited
	#service iptables save
	#service iptables restart
EOF
fi
#END iptables.tt

#BEGIN versioning.tt
################################## SET VERSION INFO #############################
cat > /etc/imageVersion <<EOF
KS_Version=2.0
KS_RunDate=`date +'%d-%m-%y'`
EOF
#END versioning.tt

#BEGIN postfooter.tt
#if [ $HOSTNAME ] && [[ "$MANF" == HP* ]] ; then
#	ILORESULTS=`setILO --hostname $HOSTNAME`
#fi
rm /etc/rsyslog.d/pxe
service iptables stop
chkconfig iptables off
chvt 1

%end

#END postfooter.tt

