#!/usr/bin/expect -f
# Expect script to supply root/admin password for remote ssh server
# and execute command.
# match_max 1000000

proc run_command { command } {
send --  ${command}
expect   {
         -re {^.*>$} {  }
         fullbuffer {
               exp_continue;
                }
            timeout { exit }
        }
set output $expect_out(buffer)


return $output

}
proc run_exec { command } {
send --  ${command}
expect   {
         -re {^.*\#$} {  }
         fullbuffer {
               exp_continue;
                }
            timeout { exit }
        }
set output $expect_out(buffer)


return $output

}
proc run_cmd { command } {
send --  ${command}
while 1 {
 
 expect   {
         -re {^.*\#$} { break }
         -re {\?} { send -- "\r" }
         fullbuffer {
               exp_continue;
                }
            timeout { exit }
        }
 }
 set output $expect_out(buffer)

return $output

}

set password password
set ipaddr [lrange $argv 0 0]
set prot [lrange $argv 1 1]
set username runscript
#set scriptname [lrange $argv 2 2]
#set arg1 [lrange $argv 3 3]
set timeout 500
# now connect to remote UNIX box (ipaddr) with given script to execute
if [string match "ssh" $prot ] {
    set pid [exp_spawn telnet $ipaddr]
    send -- "$username\r"
   } else {
    set pid [exp_spawn ssh -l $username $ipaddr]
   }
# send_user "pis is $pid\n"
if {$pid < 1}  {exit 0}
# $arg1
# send blank line (\r) to make sure we get back to gui
while 1 {

  expect {
         "*#" { break }
         "*>" { break }
         "*(passwor" { break }
         "*closed" { break }
         "*yes\/no" { send -- "yes\r" }
         "*assword:*" { send -- "$password\r" }
         # "closed by" { exit }
            timeout { exit }
         }
      }
set output $expect_out(buffer)
# send_user "string out is $output \n"
if [string match "*denied*" $output] then  {exit 0}
if [string match "*closed*" $output] then  {exit 0}
set password password
send -- "ena\r"
while 1 {

  expect {
         "*#" { break }
         "*>" { send -- "ena\r" 
                set password password 
              }
         "*closed" { break }
         "*yes\/no" { send -- "yes\r" }
         "*assword:*" { send -- "$password\r" }
         # "closed by" { exit }
            timeout { exit }
         }
      }
set output $expect_out(buffer)
# send_user "string out is $output \n"
if [string match "*denied*" $output] then  {exit 0}
if [string match "*closed*" $output] then  {exit 0}

set expect_out(buffer) ""

#run_command "term len 0\r"
run_cmd "sh access-list | inc 10200\r"
send -- "exit\r"

# expect eof
# puts "we are all done \n"
exit

